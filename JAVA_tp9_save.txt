package tp9.analyzer;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Map;
import java.util.Scanner;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.List;
import java.util.Locale;

public class Analyzer {

	Stream<String> s;

	public Analyzer(String file) {

		try {
			s = Files.lines(Paths.get(file));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public long wordCount() {

		long wc = 0;

		wc = s.flatMap(line -> Arrays.stream(line.split("[^\\p{IsLatin}]+"))).count();

		return wc;

	}

	public long uniqueWordCount() {

		long wc = 0;

		wc = s.flatMap(line -> Arrays.stream(line.split("[^\\p{IsLatin}]+"))).distinct().count();

		return wc;

	}

	

	//Format the results
	public void printResults() {

		System.out.println("Total words: " + wordCount() + ", distinct words: " + uniqueWordCount());
		
	}

	public static void main(String[] args) throws IOException {
		
		Analyzer a = new Analyzer(args[0]);
		
		a.printResults();
		
	}

}
